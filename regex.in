@header {
package regex;

import laba4.Tree;
}

@members {
}

@main {
BufferedWriter bw = new BufferedWriter(new FileWriter("out.dot"));
}

start -> Tree : e {return new Tree("S", e.get(0));}| {return new Tree("S");};
e -> Tree : t e1 {return new Tree("E", t.get(0), e1.get(0));};
e1 -> Tree : OR t e1 {return new Tree("E'", t.get(0), e1.get(0));}| {return new Tree("E'");};
t -> Tree : f t1 {return new Tree("T", f.get(0), t1.get(0));};
t1 -> Tree : f t1 {return new Tree("T'", f.get(0), t1.get(0));} | {return new Tree("T'");};
f -> Tree : a f1 {return new Tree("F", a.get(0), f1.get(0));};
f1 -> Tree : ASTERISK f1 {return new Tree("F'", new Tree(ASTERISK.get(0)), f1.get(0));}| {return new Tree("F'");};
a -> Tree : CHAR {return new Tree("A", new Tree(CHAR.get(0)));}| OPEN_BRACKET e CLOSE_BRACKET {return new Tree("A", new Tree(OPEN_BRACKET.get(0)), e.get(0), new Tree(CLOSE_BRACKET.get(0)));};

OR: '|';
OPEN_BRACKET : '(' ;
CLOSE_BRACKET : ')' ;
ASTERISK: '*' | '+';
CHAR : 'a' | 'b' | 'c' | 'd' | 'e' | 'f';